From bf393550d0a63e4fc897b479b75ff4952e4dd056 Mon Sep 17 00:00:00 2001
From: Tom Hancock <tom.hancock@hpe.com>
Date: Wed, 16 Apr 2025 09:47:24 +0100
Subject: [PATCH] fix: newer cxx std

Upstream-Status: Pending
---
 CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 1471c75..c918ead 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -2,7 +2,7 @@ cmake_minimum_required (VERSION 2.8.10 FATAL_ERROR)
 project (gxp-fru-device)
 
 set (BUILD_SHARED_LIBRARIES OFF)
-set (CMAKE_CXX_STANDARD 17)
+set (CMAKE_CXX_STANDARD 20)
 set (CMAKE_CXX_STANDARD_REQUIRED ON)
 set (
     CMAKE_CXX_FLAGS
@@ -20,7 +20,6 @@ set (
     -Wduplicated-cond \
     -Wduplicated-branches \
     -Wlogical-op \
-    -Wnull-dereference \
     -Wuseless-cast \
     -Wdouble-promotion \
     -Wformat=2 \
@@ -39,7 +38,7 @@ add_definitions (-DBOOST_ASIO_DISABLE_THREADS)
 link_directories (${EXTERNAL_INSTALL_LOCATION}/lib)
 include_directories (${CMAKE_CURRENT_SOURCE_DIR}/include)
 set (SERVICE_FILE_SRC_DIR ${PROJECT_SOURCE_DIR}/service_files)
-set (SERVICE_FILE_INSTALL_DIR /lib/systemd/system/)
+set (SERVICE_FILE_INSTALL_DIR /usr/lib/systemd/system/)
 set (FRUDEVICE_LINK_LIBS -lsystemd stdc++fs sdbusplus)
 
 set (GXPFRUDEVICE_SRC_FILES src/GxpFruDevice.cpp src/Utils.cpp)
diff --git a/service_files/xyz.openbmc_project.GxpFruDevice.service b/service_files/xyz.openbmc_project.GxpFruDevice.service
index 3f71125..c465b09 100644
--- a/service_files/xyz.openbmc_project.GxpFruDevice.service
+++ b/service_files/xyz.openbmc_project.GxpFruDevice.service
@@ -2,10 +2,15 @@
 Description=Gxp Fru Device
 StopWhenUnneeded=true
 After=xyz.openbmc_project.CloseMuxes.service dbus.service
+StartLimitBurst=3
+StartLimitIntervalSec=200
 
 [Service]
 ExecStart=/usr/bin/gxp-fru-device
 Type=simple
+Slice=bmc_data_svcs.slice
+Restart=on-failure
+RestartSec=20s
 
 [Install]
 WantedBy=basic.target
diff --git a/src/GxpFruDevice.cpp b/src/GxpFruDevice.cpp
index 091f4fd..9842eae 100644
--- a/src/GxpFruDevice.cpp
+++ b/src/GxpFruDevice.cpp
@@ -115,7 +115,11 @@ std::string GetStr(std::ifstream &fin, const unsigned int offset, const unsigned
     fin.seekg(offset, std::ios::beg);
     fin.read(v.data(), size);
 
-    return std::string(v.begin(), v.end());
+    if(v[0] != 0xFF) {
+        return std::string(v.begin(), v.end());
+    } else {
+        return "";
+    }
 }
 
 std::string GetMACAddress(std::ifstream &fin, const unsigned int offset)
@@ -159,6 +163,7 @@ void DumpFRU()
 void AddFRUObjectToDbus(std::shared_ptr<sdbusplus::asio::dbus_interface>& iface)
 {
     std::string productName = "/xyz/openbmc_project/FruDevice/HPE";
+    std::string getstr = "";
     iface = objServer.add_interface(productName, "xyz.openbmc_project.FruDevice");
 
     iface->register_property("SERVER_ID", GetServerId());
@@ -168,12 +173,30 @@ void AddFRUObjectToDbus(std::shared_ptr<sdbusplus::asio::dbus_interface>& iface)
     for(std::string eeprom: eeproms) {
         fin.open(eeprom.c_str());
         if(fin.is_open()) {
-            iface->register_property("PRODUCT_PART_NUMBER", GetStr(fin, PartNumberOffset, PartNumberSize));
-            iface->register_property("PRODUCT_SERIAL_NUMBER", GetStr(fin, SerialNumberOffset, SerialNumberSize));
-            iface->register_property("PCA_PART_NUMBER", GetStr(fin, PcaPartNumberOffset, PcaPartNumberSize));
-            iface->register_property("PCA_SERIAL_NUMBER", GetStr(fin, PcaSerialNumberOffset, PcaSerialNumberSize));
-            iface->register_property("MAC0", GetMACAddress(fin, MAC0AddressOffset));
-            iface->register_property("MAC1", GetMACAddress(fin, MAC1AddressOffset));
+            getstr = GetStr(fin, PartNumberOffset, PartNumberSize);
+	    if(getstr != "")
+                iface->register_property("PRODUCT_PART_NUMBER", getstr);
+
+            getstr = GetStr(fin, SerialNumberOffset, SerialNumberSize);
+            if(getstr != "")
+                iface->register_property("PRODUCT_SERIAL_NUMBER", getstr);
+
+            getstr = GetStr(fin, PcaPartNumberOffset, PcaPartNumberSize);
+            if(getstr != "")
+                iface->register_property("PCA_PART_NUMBER", getstr);
+
+            getstr = GetStr(fin, PcaSerialNumberOffset, PcaSerialNumberSize);
+            if(getstr != "")
+                iface->register_property("PCA_SERIAL_NUMBER", getstr);
+
+            getstr = GetMACAddress(fin, MAC0AddressOffset);
+            if(getstr != "")
+                iface->register_property("MAC0", getstr);
+
+            getstr = GetMACAddress(fin, MAC1AddressOffset);
+            if(getstr != "")
+                iface->register_property("MAC1", getstr);
+
             fin.close();
             break;
         }
